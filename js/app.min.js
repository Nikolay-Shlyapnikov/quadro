/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst square = document.querySelector('.under-header__change');\r\nconst hand = document.querySelector('.change__hand');\r\nconst pixelPhoto = document.querySelector('.change__pixel');\r\nconst normalPhoto = document.querySelector('.change__normal');\r\n\r\nhand.addEventListener(\"mousedown\", function(event) {\r\n\r\n    //let coordsItemX = event.clientX - square.getBoundingClientRect().left;\r\n\r\n    let squareSizes = {\r\n        width: square.offsetWidth,\r\n        left: square.getBoundingClientRect().left + scrollX,\r\n        right: square.getBoundingClientRect().left + scrollX + square.offsetWidth,\r\n    }\r\n\r\n    moveItem(event.clientX);\r\n\r\n    function moveItem(pageX) {\r\n        let currentX = pageX - squareSizes.left;\r\n\r\n        if (\r\n            currentX <= squareSizes.width &&\r\n            currentX >= 0\r\n        ) {\r\n            hand.style.left = `${currentX}px`;\r\n            pixelPhoto.style.clip = `rect(0,${currentX}px,auto,0)`;\r\n        } else {\r\n            if (currentX > squareSizes.width) {\r\n                hand.style.left = `${squareSizes.width}px`;\r\n            }\r\n            if (currentX < 0) {\r\n                hand.style.left = `${0}px`;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function onDragItem(event) {\r\n        moveItem(event.pageX);\r\n    }\r\n    document.addEventListener('mousemove', onDragItem);\r\n\r\n    document.addEventListener(\"mouseup\", function(event) {\r\n        document.removeEventListener('mousemove', onDragItem);\r\n    }, { \"once\": true });\r\n});\r\nhand.addEventListener(\"dragstart\", function(event) {\r\n    event.preventDefault();\r\n});\r\n\r\n\r\nsquare.addEventListener('touchstart', handleTouchStart, false);\r\n\r\nvar xDown = null;\r\nvar yDown = null;\r\n\r\nfunction getTouches(evt) {\r\n    return evt.touches\r\n}\r\n\r\nfunction handleTouchStart(evt) {\r\n    const firstTouch = getTouches(evt)[0];\r\n    xDown = firstTouch.clientX;\r\n    yDown = firstTouch.clientY;\r\n};\r\nsquare.addEventListener('touchmove', (evt) => {\r\n    evt.preventDefault();\r\n\r\n    let squareSizes = {\r\n        width: square.offsetWidth,\r\n        left: square.getBoundingClientRect().left + scrollX,\r\n        right: square.getBoundingClientRect().left + scrollX + square.offsetWidth,\r\n    }\r\n    var i;\r\n    for (i = 0; i < evt.changedTouches.length; i++) {\r\n\r\n        let pageX = evt.changedTouches[i].pageX;\r\n\r\n        let currentX = pageX - squareSizes.left;\r\n        if (currentX + squareSizes.width <= squareSizes.width && currentX >= 0) {\r\n            hand.style.left = `${currentX}px`;\r\n            pixelPhoto.style.clip = `rect(0,${currentX}px,auto,0)`;\r\n        } else {\r\n            if (currentX + squareSizes.width > squareSizes.width) {\r\n                hand.style.left = `${currentX}px`;\r\n                pixelPhoto.style.clip = `rect(0,${currentX}px,auto,0)`;\r\n            }\r\n            if (currentX < 0) {\r\n                hand.style.left = `${currentX}px`;\r\n                pixelPhoto.style.clip = `rect(0,${currentX}px,auto,0)`;\r\n            }\r\n        }\r\n    }\r\n});\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;